version: '3'
services:
  nginx:
    container_name: nginx
    image: nginx:stable-alpine
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - ../../nginx/prod:/etc/nginx/conf.d
      - ${HOME}/data/certbot/conf:/etc/letsencrypt
      - ${HOME}/data/certbot/www:/var/www/certbot
    depends_on:
      - app
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ${HOME}/data/certbot/conf:/etc/letsencrypt
      - ${HOME}/data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  app:
    container_name: app
    restart: always
    build: ../../../
    volumes:
      - ${HOME}/data/logs:/app/logs
    expose:
      - 8000
    ports:
      - 5005:5005
    env_file:
      - .env
    depends_on:
      - db
      - redis
  db:
    container_name: db
    image: postgres:alpine
    restart: always
    volumes:
      - ${HOME}/data/postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
    env_file:
      - ../db.env
  redis:
    container_name: redis
    image: redis:alpine
    restart: always
    command:
      - 'redis-server'
      - '--save 900 1'
      - '--save 300 10'
      - '--save 60 10000'
    volumes:
      - ${HOME}/data/redis:/data
